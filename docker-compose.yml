version: '3'
services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    env_file:
      - ./envs/zookeeper1.env
    volumes: 
      - ./data/zookeeper1/data:/var/lib/zookeeper/data
      - ./data/zookeeper1/log:/var/lib/zookeeper/log
    networks:
      - app-network

  zookeeper2:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "2182:2181"
    env_file:
      - ./envs/zookeeper2.env
    volumes:
      - ./data/zookeeper2/data:/var/lib/zookeeper/data
      - ./data/zookeeper2/log:/var/lib/zookeeper/log
    networks:
      - app-network

  zookeeper3:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    hostname: zookeeper3
    container_name: zookeeper3
    ports:
      - "2183:2181"
    env_file:
      - ./envs/zookeeper3.env
    volumes:
      - ./data/zookeeper3/data:/var/lib/zookeeper/data
      - ./data/zookeeper3/log:/var/lib/zookeeper/log
    networks:
      - app-network
    
  broker1:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    hostname: broker1
    container_name: broker1
    ports:
      - "9091:9091"
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    env_file:
      - ./envs/broker1.env
    volumes:
      - ./data/broker1/data:/var/lib/kafka/data
    networks:
      - app-network

  broker2:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    hostname: broker2
    container_name: broker2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    env_file:
      - ./envs/broker2.env
    volumes:
      - ./data/broker2/data:/var/lib/kafka/data
    networks:
      - app-network

  broker3:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    hostname: broker3
    container_name: broker3
    ports:
      - "9095:9095"
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    env_file:
      - ./envs/broker3.env
    volumes:
      - ./data/broker3/data:/var/lib/kafka/data
    networks:
      - app-network

  producer-service:
    build: ./producer-service
    hostname: producer-service
    container_name: producer-service
    restart: on-failure
    depends_on:
      - broker1
      - broker2
      - broker3
    env_file:
      - ./envs/producer-service.env
    networks:
      - app-network

  processor-service:
    build: ./processor-service
    hostname: processor-service
    container_name: processor-service
    restart: on-failure
    depends_on:
      - broker1
      - broker2
      - broker3
    env_file:
      - ./envs/processor-service.env
    networks:
      - app-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    restart: on-failure
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    depends_on:
      - broker1
      - broker2
      - broker3
      - mongodb
    env_file:
      - ./envs/connect.env
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.5.0
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: on-failure
    hostname: kafdrop
    container_name: kafdrop
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - 19000:9000
    env_file:
      - ./envs/kafdrop.env
    networks: 
      - app-network

  mongodb:
    image: mongo:latest
    restart: on-failure
    hostname: mongodb
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - app-network

  metabase:
    image: metabase/metabase:latest
    restart: on-failure
    hostname: metabase
    container_name: metabase
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    volumes:
      - ./data/metabase/data:/metabase-data
      - ./data/metabase/db:/metabase.db
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge
